{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony Stark\\\\Desktop\\\\Tutorial Project\\\\covid-19-tracker\\\\src\\\\LineGraph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let data in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  }; // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"I am a Graph\"), (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba (204, 16, 52, 0.5)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["C:/Users/Tony Stark/Desktop/Tutorial Project/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","cases","newDataPoint","x","date","y","push","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAG,OAAnB,KAA+B;AAClD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AACA,SAAK,IAAIL,IAAT,IAAiBA,IAAI,CAACM,KAAtB,EAA6B;AACzB,UAAID,aAAJ,EAAmB;AACf,cAAME,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEC,IADc;AAEjBC,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBM,IAAhB,IAAwBJ;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeJ,YAAf;AACH;;AACDF,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBM,IAAhB,CAAhB;AACH;;AACD,WAAOL,SAAP;AACH,GAdD,CAHiB,CAmBjB;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUb,IAAI,IAAI;AACV,YAAMI,SAAS,GAAGF,cAAc,CAACF,IAAD,CAAhC;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KALL;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEgB,MAAN,IAAe,CAAf,iBACG,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,eAAe,EAAE,yBADV;AAEPC,QAAAA,WAAW,EAAE,SAFN;AAGPnB,QAAAA,IAAI,EAAEA;AAHC,OAAD;AADF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ;AAeH;;AAED,eAAeD,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({});\r\n\r\n    const buildChartData = (data, casesType = 'cases') => {\r\n        const chartData = [];\r\n        let lastDataPoint;\r\n        for (let data in data.cases) {\r\n            if (lastDataPoint) {\r\n                const newDataPoint = {\r\n                    x: date,\r\n                    y: data[casesType][date] - lastDataPoint\r\n                };\r\n                chartData.push(newDataPoint);\r\n            }\r\n            lastDataPoint = data[casesType][date];\r\n        }\r\n        return chartData;\r\n    };\r\n\r\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n    useEffect(() => {\r\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const chartData = buildChartData(data);\r\n                setData(chartData);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>I am a Graph</h1>\r\n            {data?.length > 0 && (\r\n                <Line data={{\r\n                    datasets: [{\r\n                        backgroundColor: \"rgba (204, 16, 52, 0.5)\",\r\n                        borderColor: \"#CC1034\",\r\n                        data: data,\r\n                    }]\r\n                }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineGraph;"]},"metadata":{},"sourceType":"module"}