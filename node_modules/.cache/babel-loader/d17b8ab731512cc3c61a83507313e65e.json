{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony Stark\\\\Desktop\\\\Tutorial Project\\\\covid-19-tracker\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(['Worldwide']);\n  const [countryInfo, setCountryInfo] = useState({}); //STATE = How to write a variable in REACT <<<<\n  //links\n  // https://disease.sh/v3/covid-19/countries\n  //USEEFFECT = Runs a piece of code based on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    //The code inside here will run once when the component loads and not again\n    //async -> send a request, wait for it, do something with info.\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          // United State, India, Pakistan\n          value: country.countryInfo.iso2 //UK, USA, FR\n\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); //All of the data from the country response\n\n      setCountryInfo(data);\n    }); //links\n    // https://disease.sh/v3/covid-19/all\n    // https://disease.sh/v3/covid-19/countries/[COUNTRY_CODE]\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: country,\n    onChange: onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Live Cases by Country\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Worldwide new cases\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Tony Stark/Desktop/Tutorial Project/covid-19-tracker/src/App.js"],"names":["React","useEffect","useState","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","event","countryCode","target","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport './App.css';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(['Worldwide']);\n  const [countryInfo, setCountryInfo] = useState({});\n  //STATE = How to write a variable in REACT <<<<\n\n  //links\n  // https://disease.sh/v3/covid-19/countries\n\n  //USEEFFECT = Runs a piece of code based on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    });\n  }, []); \n\n\n\n  useEffect(() => {\n    //The code inside here will run once when the component loads and not again\n    //async -> send a request, wait for it, do something with info.\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country, // United State, India, Pakistan\n            value: country.countryInfo.iso2 //UK, USA, FR\n          }));\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(response => response.json()) \n    .then(data => {\n      setCountry(countryCode);\n\n      //All of the data from the country response\n      setCountryInfo(data);\n    })\n\n    //links\n    // https://disease.sh/v3/covid-19/all\n    // https://disease.sh/v3/covid-19/countries/[COUNTRY_CODE]\n}; \n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          {/* Header */}\n          {/* Title + select input dropdown field */}\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              {/* Loop through all the countries and show a drop down list of the options */}\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map(country => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n\n              {/* <MenuItem Value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem Value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem Value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem Value=\"worldwide\">Worldwide</MenuItem> */}\n            </Select>\n          </FormControl>\n        </div>\n\n\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n\n          {/* InfoBoxs title=\"Coronavirus cases\" */}\n          {/* InfoBoxs title=\"Recovered\"  */}\n          {/* InfoBoxs title=\"Deaths  \"  */}\n\n        </div>\n\n        {/* Map */}\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          {/* Table */}\n          <h3>Worldwide new cases</h3>\n          {/* Graph */}\n\n\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}