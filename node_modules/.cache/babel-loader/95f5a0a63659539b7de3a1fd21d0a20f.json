{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Tony Stark\\\\Desktop\\\\Tutorial Project\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Tony Stark\\\\Desktop\\\\Tutorial Project\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Tony Stark\\\\Desktop\\\\Tutorial Project\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import InfoBox from'./InfoBox';import Map from'./Map';import Table from\"./Table\";import{sortData,prettyPrintStat}from\"./util\";import LineGraph from\"./LineGraph\";import'./App.css';import\"leaflet/dist/leaflet.css\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState([\"worldwide\"]),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState({lat:34.80746,lng:-40.4796}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];//STATE = How to write a variable in REACT <<<<\n//links\n// https://disease.sh/v3/covid-19/countries\n//USEEFFECT = Runs a piece of code based on a given condition\nuseEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){//The code inside here will run once when the component loads and not again\n//async -> send a request, wait for it, do something with info.\nvar getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,// United State, India, Pakistan\nvalue:country.countryInfo.iso2//UK, USA, FR\n};});var sortedData=sortData(data);setTableData(sortedData);setMapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);//All of the data from the country response\nsetCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app__dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",value:country,onChange:onCountryChange},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app__stats\"},/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType===\"cases\",onClick:function onClick(e){return setCasesType('cases');},title:\"Coronavirus Cases\",cases:prettyPrintStat(countryInfo.todayCases),total:countryInfo.cases}),/*#__PURE__*/React.createElement(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType('recovered');},title:\"Recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:countryInfo.recovered}),/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType('deaths');},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:countryInfo.deaths})),/*#__PURE__*/React.createElement(Map,{casesType:casesType,countries:mapCountries,center:mapCenter,zoom:mapZoom})),/*#__PURE__*/React.createElement(Card,{className:\"app__right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Live Cases by Country\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h2\",{className:\"app__graphTitle\"},\"Worldwide new \",casesType,\" \"),/*#__PURE__*/React.createElement(LineGraph,{className:\"app__graph\",casesType:casesType}))));}export default App;","map":{"version":3,"sources":["C:/Users/Tony Stark/Desktop/Tutorial Project/covid-19-tracker/src/App.js"],"names":["React","useEffect","useState","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([\"worldwide\"]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  //STATE = How to write a variable in REACT <<<<\n\n  //links\n  // https://disease.sh/v3/covid-19/countries\n\n  //USEEFFECT = Runs a piece of code based on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    });\n  }, []); \n\n\n\n  useEffect(() => {\n    //The code inside here will run once when the component loads and not again\n    //async -> send a request, wait for it, do something with info.\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country, // United State, India, Pakistan\n            value: country.countryInfo.iso2 //UK, USA, FR\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(response => response.json()) \n    .then(data => {\n      setCountry(countryCode);\n      //All of the data from the country response\n      setCountryInfo(data);\n\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n\n    //links\n    // https://disease.sh/v3/covid-19/all\n    // https://disease.sh/v3/covid-19/countries/[COUNTRY_CODE]\n}; \n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          {/* Header */}\n          {/* Title + select input dropdown field */}\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              {/* Loop through all the countries and show a drop down list of the options */}\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map(country => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n\n              {/* <MenuItem Value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem Value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem Value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem Value=\"worldwide\">Worldwide</MenuItem> */}\n            </Select>\n          </FormControl>\n        </div>\n\n\n        <div className=\"app__stats\">\n          <InfoBox isRed active={casesType === \"cases\"} onClick={e => setCasesType('cases')} title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={countryInfo.cases} />\n\n          <InfoBox active={casesType === \"recovered\"} onClick={e => setCasesType('recovered')} title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={countryInfo.recovered} />\n\n          <InfoBox isRed active={casesType === \"deaths\"} onClick={e => setCasesType('deaths')} title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={countryInfo.deaths} />\n\n          {/* InfoBoxs title=\"Coronavirus cases\" */}\n          {/* InfoBoxs title=\"Recovered\"  */}\n          {/* InfoBoxs title=\"Deaths  \"  */}\n\n        </div>\n\n        {/* Map */}\n        <Map\n          casesType={casesType}\n          countries = {mapCountries}\n          center = {mapCenter}\n          zoom = {mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          {/* Table */}\n           <Table countries={tableData} />\n          <h2 className=\"app__graphTitle\">Worldwide new {casesType} </h2>\n          {/* Graph */}\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n\n\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}