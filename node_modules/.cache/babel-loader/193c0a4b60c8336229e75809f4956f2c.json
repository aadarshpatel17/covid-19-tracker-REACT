{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony Stark\\\\Desktop\\\\Tutorial Project\\\\covid-19-tracker\\\\src\\\\util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    // rgb: \"rgb(204, 16, 52)\",\n    // half_op: \"rgba(204, 16, 52, 0,5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    // rgb: \"rgb(125, 215, 29)\",\n    // half_op: \"rgba(125, 215, 29, 0,5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    // rgb: \"rgb(251, 68, 67)\",\n    // half_op: \"rgba(251, 68, 67, 0,5)\",\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }\n}, country.country, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }\n}, \" Cases: \", numeral(country.cases).format(\"0,0\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }\n}, \" Recovered: \", numeral(country.recovered).format(\"0,0\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }\n}, \" Deaths: \", numeral(country.deaths).format(\"0,0\"), \" \")))));","map":{"version":3,"sources":["C:/Users/Tony Stark/Desktop/Tutorial Project/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,SADF;AAEH;AACA;AACAC,IAAAA,UAAU,EAAE;AAJT,GADa;AAOpBC,EAAAA,SAAS,EAAE;AACPF,IAAAA,GAAG,EAAE,SADE;AAEP;AACA;AACAC,IAAAA,UAAU,EAAE;AAJL,GAPS;AAapBE,EAAAA,MAAM,EAAE;AACJH,IAAAA,GAAG,EAAE,SADD;AAEJ;AACA;AACAC,IAAAA,UAAU,EAAE;AAJR;AAbY,CAAxB;AAqBA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAC9B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AACA,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACT,KAAF,GAAUU,CAAC,CAACV,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAApD,CAAP;AACH,CAHM;AAKP,OAAO,MAAMW,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KACzBN,IAAI,CAACO,GAAL,CAASC,OAAO,iBACZ,oBAAC,MAAD;AACI,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ;AAEI,EAAA,WAAW,EAAE,GAFjB;AAGI,EAAA,KAAK,EAAElB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHtC;AAII,EAAA,SAAS,EAAEF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAJ1C;AAKI,EAAA,MAAM,EACFiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UANnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AACI,EAAA,KAAK,EAAE;AAAEkB,IAAAA,eAAe,EAAG,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD,GADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMP,OAAO,CAACA,OAAd,MAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAclB,OAAO,CAACkB,OAAO,CAACd,KAAT,CAAP,CAAuBsB,MAAvB,CAA8B,KAA9B,CAAd,MALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB1B,OAAO,CAACkB,OAAO,CAACX,SAAT,CAAP,CAA2BmB,MAA3B,CAAkC,KAAlC,CAAlB,MANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe1B,OAAO,CAACkB,OAAO,CAACV,MAAT,CAAP,CAAwBkB,MAAxB,CAA+B,KAA/B,CAAf,MAPJ,CADJ,CATJ,CADJ,CADG","sourcesContent":["import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: \"#CC1034\",\r\n        // rgb: \"rgb(204, 16, 52)\",\r\n        // half_op: \"rgba(204, 16, 52, 0,5)\",\r\n        multiplier: 800,\r\n    },\r\n    recovered: {\r\n        hex: \"#7dd71d\",\r\n        // rgb: \"rgb(125, 215, 29)\",\r\n        // half_op: \"rgba(125, 215, 29, 0,5)\",\r\n        multiplier: 1200,\r\n    },\r\n    deaths: {\r\n        hex: \"#fb4443\",\r\n        // rgb: \"rgb(251, 68, 67)\",\r\n        // half_op: \"rgba(251, 68, 67, 0,5)\",\r\n        multiplier: 2000,\r\n    },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n    data.map(country => (\r\n        <Circle\r\n            center={[country.countryInfo.lat, country.countryInfo.long]}\r\n            fillOpacity={0.4}\r\n            color={casesTypeColors[casesType].hex}\r\n            fillColor={casesTypeColors[casesType].hex}\r\n            radius={\r\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n            }\r\n        >\r\n            <Popup>\r\n                <div>\r\n                    <div\r\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})`}}\r\n                    ></div>\r\n                    <div>{country.country} </div>\r\n                    <div> Cases: {numeral(country.cases).format(\"0,0\")} </div>\r\n                    <div> Recovered: {numeral(country.recovered).format(\"0,0\")} </div>\r\n                    <div> Deaths: {numeral(country.deaths).format(\"0,0\")} </div>\r\n                </div>\r\n            </Popup>\r\n        </Circle>\r\n\r\n    ));"]},"metadata":{},"sourceType":"module"}